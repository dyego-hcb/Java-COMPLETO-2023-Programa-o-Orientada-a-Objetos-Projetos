-- RESUMO SEÇÃO 14 - HERANCA E POLIMORFISMO - DO CURSO JAVA COMPLETO 2023 PROGRAMAÇÃO ORIENTADA A OBJETOS + PROJETOS --

OS OUTROS DOIS PILARES DE PROGRAMACAO ORIENTADA A OBJETOS !!

HERANCA:

E UM TIPO DE ASSOCIACAO QUE PERMITE QUE UMA CLASSE HERDE TODOS DADOS E COMPORTAMENTOS DE OUTRA

VANTAGES:
- REUSO
- POLIMORFISMO

SINTAXE:
- CLASSE A EXTENDS B -> CLASSE A HERDA TUDO QUE A CLASSE B TEM

EXEMPLO DE AULA:

CONTA NORMAL (DADO 1, DADO 2)(COMP 1, COMP 2)
CONTA PARA EMPRESA(DADO 1, DADO 2, DADO 3)(COMP 1, COMP 2, COMP 3)

POSSUIMOS 2 CLASSES IGUAIS BASICAMENTES, POREM A CLASSE CONTA PARA EMPRESA TEM 1 DADO A MAIS E 1 COMPORTAMENTO A MAIS, SUPONDO QUE OS ATRIBUTOS E COMPORTAMENTOS SAO IGUAI

A HERANCA PERMITE O REUSO DE ATRIBUTOS E METODOS (DADOS E COMPORTAMENTOS)

COM O EXEMPLO ACIMA, IREMOS FAZER O SEGUINTE

CONTA NORMAL (DADO 1, DADO 2)(COMP 1, COMP 2)
    ^
    |
CONTA PARA EMPRESA (DADO 3)(COMP 3)

ACIMA, NOS DIZ QUE A CONTA PARA EMPRESA, POSSUI TODOS OS DADOS E COMPORTAMENTOS DA CONTA NORMAL, DEVIDO A SETINHA APONTANDO PARA A CLASSE BASE, COM ISSO CRIAMOS UMA HERANCA DA CLASSE CONTA NORMAL PARA A CONTA PARA EMPRESAS
COM ISSO, PODEMOS FAZER O REUSO DOS DADOS E COMPORTAMENTOS DA CLASSE CONTA NORMAL NA CLASSE CONTA PARA EMPRESA

OBS1: CLASSES EXTENDIDAS CONSEGUEM ACESSAR OS METODOS DA CLASSES PAI
OBS2: O SUPER QUE APARECE NOS CONSTRUTURES, SERVEM PARA PASSAR POR PARRAMETROS OS DADOS DE UMA CLASSE FILHA PARA CLASSE PAI, COMO POR EXMPLO ACIMA OS DADOS 1 E 2 QUE SAO DA CONTA NORMAL
OBS3: CONSTRUTOR PADRAO DEVE CHAMAR O SUPER PADRAO TAMBEM

MODIFICADOR DE ACESSO PROTECD -> PODE SER ACESSADO POR SUB-CLASSES, NESSES CASOS, CLASSES QUE POSSUEM EXTENDS DE UMA CLASSE ESPECIFICA, FAZENDO COM QUE SEJA POSSIVEL ACESSAR ATRIBUTOS DE OUTROS PACOTES 

DEFININICOES IMPORTANTES DE HERANCA:
- RELACAO E-UM -> POR EXEMPLO, A CONTA PARA EMPRESA E UMA CONTA NORMAL, POREM ELA POSSUI ALGUMAS COISA A MAIS
- GENERALIZACAO/ESPECIALIZACAO -> CLASSES PAIS SAO CHAMADAS DE GENERALIZACAO E AS CLASSES FILHAS SAO CHAMADAS DE ESPECIALIZACAO, POIS COMO UMA CLASSE FILHA DERIVA DE UMA CLASSE PAI, ELA POSSUI TODOS OS ATRIBUTOS DO PAI, ENTAO UM COMPORTAMENTO GENETICO, POREM UMA CLASSE FILHA E ESPECIFICA, POIS REALIZA ACOES ESPECIFICAS
- SUPERCLASSE (CLASSE BLASE)/ SUB-CLASSE(CLASSE DERIVADA) -> SUPER CLASSE E A CLASSE PAI E SUB-CLASSE A CLASSE FILHA 
- HERANCA/EXTENSAO -> POIS UMA CLASSE FILHA EXTENDE A CLASSE PAI, HERDA TODOS OS ATRIBUTOS E METODOS
- HERANCA E UMA ASSOCIACAO ENTRE CLASSES(E NAO ENTRE OBJETOS) -> POIS ASSOCIACAO ENTRE OBJETO, E ASSOCIAR 2 OBJETOS, COMO UM CLIENTE COM UMA CONTA, E ASSOCIACAO DE CLASSES, E APENAS A INSTACIACAO DE UM OBJETO, POR EXEMPLO CONTA PARA EMPRESA, QUE E A MESMA COISA DA CONTA NORMAL, POREM COM ALGUMAS COISAS A MAIS, ENTAO AO INSTANCIAR UMA CLASSE QUE POSSUI UMA ASSOCIACAO, COMO A CONTA NORMAL E CONTA PARA EMPRESA, VOCE INSTANCIA APENAS O OBJETO QUE DESEJA, POR EXEMPLO APENAS A CONT PARA EMPRESA, DIFERENTEMENTE DE ASSOCIACAO DE OBJETO, ONDE DEVEMOS INSTANCIAR OS 2 OBEJTOS, EM ASSOCIACAODE CLASSE INSTANCIAMOS APENAS 1

UPCASTING E DOWNCASTING:

UPCASTING:
- CASTING DA SUBCLASSE PARA SUPERCLASSE -> POR EXEMPLO ACIMA, ATRIBUIR UM OBJETO CONTA PARA EMPRESA EM UM OBJETO CONTA NORMAL
- USO COMUM: POLIMORFISMO

PARA REALIZAR A OPERCAO DE UPCASTING, BASTA DIZER QUE SUA VARIAVEL DO OBJTO A RECEBE B, FUNCIONA SEM ERROS DEVIDO QUE A HERANCA E UMA REALCAO E-UM, ENTAO SE B EXTENDS A, ENTAO A PODE RECEBER B, FAZENDO COM QUE CRIE UM OBJETO DO TIPO A COM OS DADOS DE B

DOWNCASTING:
- CASTING DA SUPER CLASSE PARA SUBCLASSE -> CONVERTER DA SUPER CLASSE PARA A SUB CLASSE, EXEMPLO ACIMA, UM OBJT DO TIPO CONTA NORMAL SER INSTANCIADO EM UM OBJTO DO TIPO CONTA PARA EMPRESA
- PALAVRA INSTANCEOF 
- USO COMUM: METODOS QUE RECEBEM PARAMETROS GENERICOS (EX: EQUALS (COMPARA OBT COM OUTRO O EQUAL))

PARA REALIZAR A OPERACAO DE DOWNCASTING, NAO E POSSIVEL APENAS FAZER UMA VARIAVEL DO OBJETO B RECEBER UM OBJETO A E INSTANCIAR ESSE OBJETO B, POIS SAO TIPOS DIFERENTES DE CLASSE, MESMO QUE POSSUAM A HERANCA, QUE A E PAI DE B, NAO E POSSIVEL, POIS HA ELEMENTOS EM B QUE NAO ESTAO EM A, PARA REALIZAR O DOWNCASTING, DEVEMOS FAZER O SEGUINTE:
DEVEMOS FORCAR UM CASTING DA SUPER PARA A SUB, DEVEMOS COLOCAR EM PARETENSES O NOME DA SUBCLASSE, POR EXEMPLO B var_obj_b_casting_a = (B)var_obj_a

OBS1: QUANDO TEMOS MAIS DE UMA SUB-CLASSES E TENTAMOS DA UM DOWNCASTING DE UMA SUB-CLASSE PARA OUTRA, DA UM ERRO DE EXECAO DE QUE NAO DA PRA CONVERTER UMA SUB-CLASSE PARA OUTRA, ESSE ERRO ACONTECE APENAS NA EXECAO

INSTANCEOF -> VERIFICA SE UMA VARIAVEL E DO TIPO DE ALGUMA INSTANCIA DE UMA CLASSE ESPECIFICA

SOBREPOSICAO:

E A IMPLEMENTACAO DE UM METODO DE UMA SUPERCLASSE NA SUBCLASSE, POR EXEMPLO REEMPLEMENTAR METODOS NAS SUB-CLASSES, PARA CRIAR A EXISTENCIA DE COMPORTAMENTOS UNICOS PARA DETERMINADAS CLASSES
E FORTEMENTE RECOMENDAVEL USAR A ANOTAVAO @OVERRIDE EM UM METODO SOBRESCRITO, POIS:
- FACILITA A LEITURA E COMPREENCAO DO CODIGO
- AVISAMOS AO COMPILADOR(BOA PRATICA)

OBS1: CASO CRIE UM METODO @OVERRIDE NA SUB-CLASSE E ESSE METODO NAO EXISTE NA CLASSE PAI, DEVE-SE CRIA-LO, POIS SE NAO DA ERRO

PALAVRA SUPER:

E POSSIVEL CHAMAR A IMPLEMENTACAO DA SUPERCLASSE USANDO A PALAVRA SUPER.
EXEMPLO: SUPONHA QUE NA CLASSE BUSINESSACCOUNT A REGRA PARA SAQUE SEJA REALIZAR O SAQUE NORMALEMNTE DA SUPER CLASSE E DESCONTAR MAIS 2,
COM ISSO BASTA USAR SUPER.WITDRAW(AMMOUT), ONDE O AMOUNT E PASSADO POR PARAMETRO NA FUNCAO WITHDRAW SOBRESCRITA NA BUSINESSACCOUNT, RELIZA O SAQUE NORMAL COM A REGRA DA SUPER CLASSE, E DEPOIS DESCONTAMOS 2 A MAIS

OBS1: COM O SUPER. PODEMOS CHAMAR QUAISAUQER METODO E REUTILIZA-LOS NA CLASSE FILHA

CLASSES E METODOS FINAL:

PALAVRA CHAVE: FINAL
CLASSE: EVITA QUE A CLASSE SEJA HERDADA
PUBLIC FINAL CLASS
METODO: ENVITA QUE O METODO SEJA SOBREPOSTO

OBS1: COMPILADOR NAO DEIXA HERDAR NEM DAR @OVERRIDE NAS CLASSES OU METODOS COM FINAL

PORQUE USAR O FINAL:

- SEGURANCA, POIS DEPENDENDO DAS REGRAS DO NEGOCIO, AS VEZES DE DESEJAVEL GARANTIR QUE UMA CLASSE NAO SEJA HERDADA, OU QUE UM METODO NAO SEJA SOBREPOSTO
GERALMENTE CONVEM ACRESCENTAR FINAL EM METODOS SOBREPOSTOS, POIS SOBREPOSICOES MULTIPLAS PODEM SER UMA PORTA DE ENTRADA PARA INCONSISTENCIAS

- PERFOMANCE, POIS ATRIBUTIS DE TIPO DE UMA CLASSE FINAL SAO ANALISADOS DE FORMA MAIS RAPIDA EM TMPO DE EXECUCAO, EXEMPLO CLASSICO STRING E UMA CLASSE FINAL

POLIMORFISMO:

O POLIMORFISMO EM POO, E RECURSO QUE PERMITE QUE VARIAVEIS DE UM MESMO TIPO MAIS GENERICO POSSAM APONTAR PARA OBJETOS DE TIPOS ESPECIFICOS DIFERENTES, TENDO ASSIM COMPORTAMENTOS DIFERENTES CONFORME CADA TIPO ESPECIFICO.
COMO POR EXEMPLO OS EXEMPLOS CITADOS ANTERIORMENTE DE CONTAS, ONDE FIZEMOS O UPPERCASTING E O DOWNCASTING, ONDE CRIAMOS ALGUNS OBJETOS DO TIPO ACCOUNT, POREM INSTANCIAMOS CONTAS POUPANCAS E EMPRESARIAIS
COM ISSO, TEMOS AS VARIAVEIS DO MESMO TIPO NA MEMORIA, POREM APONTAM PARA OBJETOS DIFERENTES, COMO A POUPANCA E A CONTA EMPRESARIAL

OBS1: POLIMORFISMO QUER DIZER MUITAS FORMAS, COMO MUITAS FORMAS DE CONTA COMO TEMOS A CONTA POUPANCA E A EMPRESARIAL

IMPORTANTE ENTENDER:

A ASSOCIACAO DO TIPO ESPECIFICO COM O TIPO GENERICO E FEITA EM TEMPO DE EXECUCAO(POR UPCASTING)
O COMPILADOR NAO SABE PARA QUAL TIPO ESPECIFICA A CHAMADA DO METODO WITHDRAW ESTA SENDO FEITA(ELE SO SABE QUE SAO DUAS VARIAVEIS DO TIPO ACCOUNT)

OBS1: STRING.FORMAT FORMATA A STRING, USANDO MUITO EM DADOS FLUTUANTE

CLASSES ABSTRATAS:

SAO CLASSES QUE NAO PODEM SER INSTANCIADAS
E UMA FORMA DE GARANTIR HERANCA TOTAL, SOMENTE SUBCLASSE NAO ABSTRATAS PODEM SER INSTANCIADAS, MAS NUNCA A SUPER CLASSE ABSTRATA

OBS: EM UML CALSSE ABSTRATA DIFERENCIADA PELA FONTE, ELA FICA NO STYLE ITALIC

QUESTIONAMENTO:

SE A CLASSE ACCOUNT NAO PODE SER INSTNACIADA, POR QUE SIMPLESMENTE NAO CRIAR SOMENTE SAVINGS ACCOUNT E BUSINESACCOUT ?
RESPOSTA:
REUSO -> REUTILIZAR METODOS E ATRIBUTOS
POLIMORFISMO, A SUPERCLASSE GENERICA NOS PERMITE TRATAR DE FORMA FACIL E UNIFORME TODOS OS TIPOS DE CONTA, INCLUSIVE COM O POLIMORFISMO SE FOR O CASO(COMO FIZEMOS NOS EXEMPLOS ANTERIOR), POR EXEMPLO PODEMOS COLOCAR TODOS OS TIPOS DE CONTAS EM UMA MESMA COLECAO, POR EXEMPLO UMA LISTA DE CONTAS, COM TODA AS CONTAS SAVING E BUSINESS.

METODOS ABSTRATOS:

SAO METODOS QUE NAO POSSUEM IMPLEMENTACAO -> POIS A CLASSE E MUITO CRUA PARA CONTER INFORMACOES ESPECIFICAS SOBRE O QUE AQUELE METODO DEVE FAZE
METODOS PRECISAM SER ABSTRATOS QUANDO A CLASSE E GENERICA DEMAIS PARA CONTER SUA IMPLEMENTACAO -> QUANDO POR EXEMPLO, TEMPOS UMA CLASSE GENERICA CHAMADA FORMA, COM O METODO AREA, MAS NAO TEM COMO FALARMOS QUAL O CALCULO DA AREA DESSA FORMA, ENTAO O METODO AREA SERA ABSTRATO
SE UMA CLASSE POSSUIR PELO MENOS UM METODO ABSTRATO, ENTAO ESSA CLASSE TAMBEM E ABSTRATA -> SE HA METODO A CLASSE E ABSTRATA

NOTACAO UML: ITALICO TAMBEM

OBS1: METODOS ABSTRATOS DEVEM SER IMPLEMENTADOS NA CLASSE FILHA, VISTO QUE O MESMO NAO E IMPLMENTADO NA CLASSE PAI POR FALTA DE INFORMACAO SOBRE O QUE O MESMO DEVE FAZER, COMO NO EXEMPLO ACIMA, UMA CLASSE FORMA NAO SABE AO CERTO COMO CALCULAR A AREA DE UMA DETERMINADA FORMA, VISTO QUE PARA CADA FORMA O CALCULO DA AREA E DIFERENTEMENTE
OBS2: METODOS ABSTRATOS SAO OBRIGADOS A SEREM IMPLEMENTADOS NA CLASSE FILHA
OBS3: MATH. BIBLIOTECA MATEMATICA DO JAVA
OBS4: SEMPRE DECLARAR A LISTA DO TIPO DA SUPER CLASSE, POIS AI ACEITARA QUAISQUER TIPO DE OBJETO QUE SAO EXTENDS DA SUPER CLASSE