-- RESUMO SEÇÃO 11 - TOPICOS ESPECIAIS EM JAVA DATA-HORA - DO CURSO JAVA COMPLETO 2023 PROGRAMAÇÃO ORIENTADA A OBJETOS + PROJETOS --

DATA-[HORA] LOCA: ANO-MES-DIA-[HORA] SEM FUSO HORARIO 
OBS: [HORA] E OPICIONAL

DATA-HORA GLOBAL: ANO-MES-DIA-HORA COM FUSO HORARIO

DURACAO: TEMPO DECORRIDO ENTRE DUAS DATA-HORAS

ADICAO DO FUSO HORARIO, E PARA QUE PESSOAS EM OUTROS FUSO HORARIOS POSSAM SABER QUAL O HORARIO EM SUA LOCALIDADE

DATA HORA GLOBAL COM FUSO HORARIO EXEMPLO:

BANCO DE DADOS API SOBRE O INICIO DE UMA LIVE:
2022-97-23T13:30:00Z -> EM PORTUGAL COMECA AS 15:30 DO DIA 23/07/22, NO BRASIL COMECA AS 11:30 DO DIA 23/07/22 E NA INGLATERRA COMECA AS 14:30 DO DIA 23/07/22 

OBS1: Z INDICA O FUSO DE LONDES
OBS2: A LETRA T INDICA QUE APOS ELA VIRA O HORARIO

QUANDO USAR DATA-[HORA] LOCAL: QUANDO O MOMENTO EXATO NAO INTERESSA A PESSOAS DE OUTRO FUSO HORARIO.
USO COMUML SISTEMAS DE REGIAO UNICAO, EXCEL.
DATA DE NASCIMENTO: 15/06/2001
DATA-HORA DE VENDA: 13/08/2022 AS 15:32 (PRESUMINDO QUE NAO INTERESSA O FUSO HORARIO)

QUANDO USAR DATA-HORA GLOBAL: QUANDO O MOMENTO EXATO INTERESSA A PESSOAS DE OUTRO FUSO HORARIO.
USO COMUM: SISTEMAS MULTI-REGIAO, WEB
QUANDO SERA O SORTEIO ? 21/08/2022 AS 20H (HORARIO DE SP)
QUANDO O COMENTARIO FOI POSTADO? A 17 MINUTOS
QUANDO FOI REALIZADA A VENDA ? 13/08/2022 AS 15:32 (HORARIO DE SP)
INICIO E FIM DO EVENTO? 21/08/2022 AS 14 ATE AS 16 (HORARIO DE SP)

TIMEZONE(FUSO HORARIO)

GMT - GREENWICH MEAN TIME MARCO ZERO:
- HORAIO DE LONDES
- HORARIO PADRAO UTC - COORDINATED UNIVERSAL TIME (PADRAO DE ESCRITA DE HORARIO)
- TAMBEM CHAMADO DE "Z" TIME OU ZULU TIME

OUTROS FUSORARIOS SAO REALTIVOS AO GMT/UTC: 
- SP GMT-3
- MANAUS GMT-4
- PORTUGAL GMT+1

MUITAS LINGUAGENS USAM NOMES PARA AS TIMEZOES:
- "US/PACIFIC"
- "AMERICA/SAO_PAULO"
- ETC.

PADRAO ISO 8601: ESPECIFICA COMO REPRESENTAR DATA E HORA NA FORMA DE TEXTO

DATA-[HORA] LOCAL:
- 2022-07-21
- 2022-07-21T14:52
- 2022-07-21T14:52:09
- 2022-07-21T14:52:06.4073

DATA-HORA GLOBAL:
- 2022-07-23T14:52:09Z
- 2022-07-23T14:52:09.254935Z
- 2022-07-23T14:52:09-03:00

OBS1: FORMATO AAAA-MM-DD
OBS2: PODEMOS USAR LETRA DO TIMEZONE OU PODEMOS USAR O - E INDICAR O FUSO GMT

OPRACOES IMPORTANTES COM DATA-HORA

1- INSTANCIACAO:
- AGORA -> DATA-HORA:
LocalDate nome_var = LocalDate.now(); (DIA MES E ANO DATA-HORA LOCAL)
LocalDateTime nome_var = LocalDateTime.now(); (DIA MES ANO E HORA E SEC DATA-HORA LOCAL)
Instant nome_var = Instant.now(); (CRIANDO DATA HORA GLOBAL)

- TEXTO ISO 8601 -> DATA-HORA:
LocalDate d04 = LocalDate.parse("2022-07-20"); (LOCAL DATE)
LocalDateTime d05 = LocalDateTime.parse("2022-07-20T01:30:26"); (LOCAL DATE HORA)
Instant d06 = Instant.parse("2022-07-20T01:30:26Z"); (DATE GLOBAL LONDRES)
Instant d07 = Instant.parse("2022-07-20T01:30:26-03:00"); (DATE GLOBAL BRASIL PARA LONDRES)
OBS: UTILIZA O PARSE PARA CRIAR UMA DATA NO FORMATO ISO 8601 EM TEXTO

- TEXTO FORMATO CUSTOMIZADO -> DATA-HORA
// https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/DateTimeFormatter.html
DateTimeFormatter nome_var1 = DateTimeFormatter.ofPattern("dd/MM/yyyy");
DateTimeFormatter nome_var2 = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");

LocalDate nome_var = LocalDate.parse("20/07/2022", nome_var1);
LocalDateTime nome_var = LocalDateTime.parse("20/07/2022 01:30", nome_var2);

OBS1: NESSA ETAPA, DEVEMOS INFORMAR O FORMATO QUE QUEREMOS NA DATA, COM ISSO ACESSANDO O LINK ACIMA, PODEMOS ENCONTRAR COMO DECLARAR UM FORMATO DE DATA E PASSAR O MESMO COMO PARAMETRO NO PARSE.
OBS2: PODEMOS FAZER A INSTANCIACAO DO DATE FORMATE NO MOMENTO DE CRIACAO DE OBJETO

- DIA MES ANO [HORARIO] -> DATA-HORA LOCAL

PARA CRIAR UM DATA-HORA LOCAL, PASSANDO POR PARAMETRO CADA UM DOS ATRIBUTOS, TULIZAMOS A FUNCAO OF, COMO PODEMOS VER ABAIXO, REPSCTIVAMENTE PASSAMOS O ANO, MES, DIA, HORA, MINUTOS E SEGUNDOS
LocalDate nome_var = LocalDate.of(2022, 07, 20);
LocalDateTime nome_var = LocalDateTime.of(2022, 07, 20, 1, 30);

2- FORMATACAO
- DATA-HORA -> TEXTO ISO 8601 
BASTA CHAMAR O METODO TOSTRING

- DATA-HORA -> TEXTO FORMATO CUSTOMIZADO
BASCICAMENTE DO MESMO JEITO QUE CRIAMOS UM TEXTO FORMATO CUSTOMIZADO, DEVEMOS CRIAR UM DATE TIME FORMATER, COMO PODEDMOS VER ABAIXO
PODEMOS VER QUAIS SAO AS LETRAS PARA COLOCAR NO FORMATER NO SEGUINTE LINK:
// https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/DateTimeFormatter.html

DateTimeFormatter nome_var1 = DateTimeFormatter.ofPattern("dd/MM/yyyy");
DateTimeFormatter nome_var2 = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
DateTimeFormatter nome_var3 = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm").withZone(ZoneId.systemDefault());
DateTimeFormatter nome_var4 = DateTimeFormatter.ISO_DATE_TIME; -> IMPRIME NO FORMATO ISO DATE_TIME
DateTimeFormatter nome_var5 = DateTimeFormatter.ISO_INSTANT; -> IMPRIME NO FORMATO ISO_INSTANT QUE E DATA GLOBAL

PARA MOSTRAR UMA DATA USANDO OS PADROES CRIADO ACIMA, DEVEMOS UTILIZAR O .FORMAT(NOME_VAR) PODEMOS PASSAR O DATETIMEFORMATTER NO .FORMAT DIRETO
OBS1: PARA IMPRIMIR AS DATAS DE FORMA CUSTOMIZADA, DATAS GLOBAIS, DEVEMOS ESPECIFICAR QUAL O FUSO HORARIO, COMO PODEMOS VER NA VAR_3
OBS2: PARA DATAS DO TIPO GLOBAL, PARA FORMATARMOS SUA SAIDA, DEVEMOS UTILIZAR O FORMAT CRIADO E CHAMAR A FUNCAO .FORMAT COM O OBJETO DITETIMEFORMATER CRIADO
OBS3: NAO PODEMOS FORMATAR DATA QUE POSSUEM FUSO HORARIO, EM FORMATOS QUE NAO POSSUEM
OBS4: ISO_DATE_TIME E UMA DATA LOCAL E NAO PODE SER UTILIZADO EM DATAS GLOBAI, DEVE UTILIZAR O ISO_INSTANT (POR PADRAO FUSO E O Z)

3- CONVETER DATA-HORA GLOBAL PARA LOCAL
- DATA-HORA GLOBAL, TIMEZONE(SISTEMA LOCAL) -> DATA-HORA LOCAL 
PARA CONVERTER UMA DATA-HORA GLOBAL PARA UMA DATA-HORA LOCAL, DEVEMOS SEMPRE INFORMAR QUAL TIMEZONE GMT DO HORARIO DE DESTINO OU DE CONVERSAO 

for (String s : ZoneId.getAvailableZoneIds())
{
    System.out.println(s);
}

PARA CONVERTER UMA DATA GLOBAL PARA UMA DATA LOCAL, DEVEMOS UTILIZAR OS SEGUINTES COMANDOS:

LocalDate var_nome = LocalDate.ofInstant(data, ZoneId.systemDefault()); NESSE CASO ESTAMOS USANDO A ZONA DO SISTEMA OPERACIONAL DA MAQUINA DO USUARIO, PODEMOS MUDAR ESSA ZONA, UTILIZANDO QUAISQUER UMA DAS ZONAS QUE SAO MOSTRADAS AO EXECUTAR O CODIGO ACIMA
LocalDate var_nome = LocalDate.ofInstant(data, ZoneId.of("Portugal")); NESSE CASO ESPECIFICAMOS QUE O TIME ZONE VAI SER O DE PORTUGAL

MOSTRA TODAS AS TIMEZONES DO JAVA

4- OBTER DADOS DE UMA DATA-HORA LOCAL
- DATA-HORA LOCAL -> DIA MES ANO HORARIO
var_data.getDayOfMonth -> PEGA O DIA
var_data.getMonthValue -> PEGA O MES
var_data.getYear -> PEGA O ANO
var_data.getHour -> PEGA AS HORAS
var_data.getMinute -> PEGA OS MINUTOS
var_data.getSecond -> PEGA OS SEGUNDOS
var_data.getNano -> PEGA OS NANOS SEGUNDOS

5- CALCULOS COM DATA-HORA
- DATA-HORA +/- TEMPO (ADD OU SUB TEMPO NA DATA COMO ADD DIAS, ETC) -> DATA-HORA
PARA REALIZARMOS CALCULOS COM DATA HORA, UTILIZANDO OPERACOES DE + E -, UTILIZAMOS OS COMANDOS MINUS, COMO PODEMOS VER ABAIXO:
LocalDate var_data = var_data.minusDays(7); -> TIRA X(7) DIAS A PARTIR DA DATA ATUAL EM LOCAL DATE
LocalDate var_data = var_data.plusDays(7); -> ADICIONA X(7) DIAS A PARTIR DA DATA ATUAL EM LOCAL DATE
LocalDateTime var_data = var_data.minusDays(7); -> TIRA X(7) DA DATA ATUAL EN LOCAL DATE TIME
LocalDateTime var_data = var_data.plusDays(7); -> ADD X(7) DA DATA ATUAL EN LOCAL DATE TIME
Instant var_data = var_data.minus(7, ChronoUnit.DAYS); -> TIRA X(7) DA DATA ATUAL EM INSTANT
Instant var_data = var_data.plus(7, ChronoUnit.DAYS); -> ADD X(7) DA DATA ATUAL EM INSTANT

OBS1: TEMOS OPERACOES DE ADICAO E SUB PARA OS DIAS MESES ANOS HORAS MINUTOS E SEGUNDOS
OBS2: NAS VARIAVEIS INSTANT, TEMOS QUE PASSAR UMA QUANTIA E UM TEMPORAL UNIT QUE SERA O DIA MES ANO HORA MINUTO OU SEGUNDOS, ATRAVES DO CRHONOUINIT DEFINIMOS ONDE IREMOS ADICIOAR OU SUBTRAIR A DATA

- DATA-HORA 1, DATA-HORA 2 -> DURACAO
PARA CALCULAR A DURACAO, UTILIZAMOS A CLASSE JAVA DURATION, COMO PODEMOS VER NO CODIGO ABAIXO, UTILIZANDO A FUNCAO BETWEEN, ONDE PODEMOS VERIRICAR A DIFERENCA DA DURACAO ENTRE O TEMPO EM DIAS, MESES, ANO, HORAS, MINUTOS, SEGUNDO, NANOSSEGUNDOS:

Duration var_duration = Duration.between(pastWeekDate.atStartOfDay(), var_data.atStartOfDay()); -> CALULANDO A DURACAO ENTRE DUAS DATA HORAS COM O BETWEEN
Duration var_duration = Duration.between(pastWeekLocalDate, var_data);
Duration var_duration = Duration.between(pastWeekInstant, var_data);
Duration var_duration = Duration.between(var_data, pastWeekInstant);

OBS1: UTILIZARO COMANDO .atTime(0,0) DEFINE A HORA COMO 0 0 E CONVERTE UMA DATA-LOCAL PARA UMA DATA-HORA LOCAL
OBS2: NAO PODEMOS COMPARA UM LOCAL-DATE COM UM LOCAL-DATE TIME
OBS3: O COMANDO ATSTARTOFDAY REFERE-SE PARA INICIAR AQUELA DATA COM O HORARIO 00:00, NO INICIO DO DIA ASSIM COMO SEU NOME FALA
OBS4: SE COLOCAR INVERTIDO A DATA MAIOR COMO SEGUNDO PAREMETRO, RETORNA O TEMPO NEGATIVO, POIS A PRIMEIRA DATA VEM ANTES QUE A SEGUNDA

PRINCIPAIS TIPOS JAVA (V 8+)
1- DATA-HORA LOCAL USA AS CLASSES ABAIXO:
- LOCALDATE
- LOCALDATETIME

2- DATA-HORA GLOBAL USA AS CLASSES ABAIXO:
- INSTANT

3- DURACAO USA AS CLASSES ABAIXO:
- DURATION

4- OUTROS USA AS CLASSES ABAIXOS:
- ZONEID
- CHRONOUNIT

OBS: TOSTRING DO DATE SEMPRE RETORNA UM TEXTO DO PADRAO 8601

DATE:

A DATA REPRESENTA UM INSTANTE

O TIPO DATE E O TIPO MAIS BASICO DE SE ALOCAR UMA DATA, O MESMO ESTA NO PACOTE JAVA.UTIL

UM OBJETO DO TIPO DATE INTERNAMENTE ARMAZENA:
- NUMERO DE MILISSEGUNDOS DESDE A MEIA NOITE DO DIA 01 DE JANEIRO DE 1970 GMT(UTC)
- GMT (GREENIWCH MEAN TIME (TIME ZONE))
- UTC (COORDINATE UNIVERSAL TIME (TIME STANDARD))

A DATA E UM INTEIRO DO TIPO LONG QUE ARMAZENA EM MILISSEGUNDOS A DATA

CLASSE SIMPLE DATE FORMAT
LINK DOC:
https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/DateTimeFormatter.html

ESSA CLASSE DEFINE FORMATOS PARA CONVERSAO ENTRE DATE E STRING, POIS FAZEMOS A LEITURA DE UMA DATA COMO STRING, POR ISSO PRECISAMOS DESSA CLASSE
EX:
1- dd/MM/yyyy -> 23/07/2018
2- dd/MM/yyyy HH:mm:ss -> 23/07/2018 14:54:12
SINTAXE:
DateTimeFormatter fmt1 = DateTimeFormatter.ofPattern("dd/MM/yyyy");
new Date(); -> CRIAR DATA ATUAL
new Date(System.currentTimeMillis()); -> OUTRA MANEIRA DE CRIAR DATA ATUAL
setTimeZone(TimeZone.getTimeZone("GMT"));


OBS0: O NEW DATE RECEBE MILISEGUNDOS PARA CRIAR UMA DATA
OBS1: AO UTILIZAR UM DATE TIME FORMATER, AO UTILIZARMOS O METODO PARSE, PODEMOS PASSAR UMA DATA EM FORMA DE STRING E CONVERTER PARA DATE
OBS2: UTILIZAMOS O FORMAT PARA FORMATAR O TEXTO E MOSTRAR DO JEITO QUE DEFINIMOS O ofPattern
OBS3: AO PASSAR 0L MILISSSEGUNDOS COMO ARGUMENTO EM NEW DATE, VOCE ESTARA INSTANCIANDO A PRIMEIRA DATA DO PADRAO UTC, 01 DE JANEIRO DE 1970
OBS3: PARA CRIAR UM DATE SEM USAR O FORMARTER, PASSANDO OS MILISSEGUNDOS, DEVEMOS DIVIDIR POR MILISEGUNDOS
OBS4: POR PADRAO, O JAVA JA DEFINE UM OBJETO DATE COM O TIMEZONE DO SEU COMPUTADOR, PARA ALTERALO, DEVEMOS USAR O SETTIMEZONE

PADRAO ISO 8601 -> PADRAO PARA ARMAZENAR DATAS EM FORMA DE TEXTO
FORMATO: yyyy-MM-ddTHH:mm:ssZ
EX: 2018-06-21T14:32:32Z 

OBS1: Z REPRESENTA UTC ZONE

CLASSE INSTANT -> 

Date y3 = Date.from(Instant.parse("2018-06-21T14:32:32Z"));

OBS1: USANDO O SEGUINTES COMANDOS Date.from(Instant.parse()) PODEMOS CONVERTER UMA CLASSE INSTANT PARA UMA CLASSE DATE
OBS2: TIPO DATE SAO MUITO UTILIZADO EM CALENDAR, O TIPO DATE TA NA VERSAO JAVA 8-

CALENDAR E UTILIZADO PARA REALIZAR CALCULOS ENTRE OBJETOS DO TIPO DATE, COMO POR EXEMPLO:
add(Calendar.HOUR_OF_DAY, 4); -> ONDE DEFINE O QUE VAI ADD HORA, MIN, SEC, DIAS, ETC E O TEMPO
get(Calendar.MINUTE);

OBS0: O CALENDARIO RECEBE UMA DATA PARA REALIZAR OPERACOES NA MESMA
OBS1: PARA ATUALIZAR VARIAVEL, DEVE-SE CHAMAR A VARIAVEL CALENDARIO E DAR O GETTIME
OBS2: PARA PEGAR UNIDADE DE TEMPO COM CALENDAR, UTILIZAMOS O GET E PASSAMOS POR PARAMETO O QUE QUEREMOS EXTRAIR