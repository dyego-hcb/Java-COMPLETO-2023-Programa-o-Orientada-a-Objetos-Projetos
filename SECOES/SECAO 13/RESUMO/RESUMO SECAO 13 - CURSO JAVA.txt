-- RESUMO SEÇÃO 13 - ENUMERACOES, COMPOSICOES - DO CURSO JAVA COMPLETO 2023 PROGRAMAÇÃO ORIENTADA A OBJETOS + PROJETOS --

ENUMERACOES SERVEM PARA REPRESENTAR VARIOS TIPOS QUE POSSUEM UM CONJNUTO DE CONSTANTES RELACIONADAS, POR EXEMPLO O CICLIO DE VIDA DE UM PEDIDO

ENUMERACOES:

E UM TIPO ESPECIAL QUE SERVE PARA ESPECIFICAR DE FORMA LITERAL UM CONJUNTO DE CONSTANTES RELACIONANDAS
PALAVRA CHAVA EM JAVA: ENUM
VANTAGEM: MELHOR SEMANTICA, CODIGO MAIS LEGIVEL E AUXILIADO PELO COMPILADOR

DOCUMENTACAO DE CLASSES ENUMERADAS EM JAVA DISPONIVEL EM: https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html

EXEMPLO:

CICLIO DE VIDA DE UM PEDIDO
    O 
    |
    V
[PAGAMENTO PENDENTE]
    | (BILING)
    V
[PROCESSANDO]
    | (DISPATCH)
    V
[SHIPPED]
    | (DELIVER)
    V
[DELIVERED]
    |
    V
    O


USAMOS O TIPO ENUMERADO PARA CRIAR AS ENUMERACOES, COMO PODEMOS VER NO CODIGO ABAIXO DO EXEMPLO ACIMA:

package entities.enums;

public enum OrderStatus {
	PENDING_PAYMENT,
	PROCESSING,
	SHIPPED,
	DELIVERED;
}

NOTE O TIPO ENUM, DEFININDO COMO TIPO ENUMERADO
OBS: CHAMAMOS O ORDERSTATUS.STATUS E IMPRIME DO MESMO NOME DEFINIDO NO ENUM

CONVERTER STRING PARA ENUM USAMOS O METODOS .VALUEOF(STRING)

EM NOTACOES UML, O DESENHO E MESMO, POREM ADICIONA UM ESTIOTIPO FALANDO QUE E ENUM E DEVE SEMPRE COLOCAR UM VALOR INTEIRO PARA REPRESENTAR AS POSICOES DOS TIPOS ENUM

CATEGORIAS DE CLASSES:

EM UM SISTEMA ORIENTADO A OBJETOS, DE MODO GERAL "TUDO" E OBJETOS
POR QUESTONS DE DESING, TAIS COMO ORGANIZACAO, FLEXIBILIDADE, REUSO, DELEGACAO, ETC, HA VARIAS CATEGORIAS DE CLASSES QUE SAO:

1- VIEW -> TELA DOS SISTEMAS 
2- CONTROLLERS -> CARA QUE FAZ O MEIO ENTRE TELA E O SISTEMAS
3- ENTITIES -> PRODUTOS, CLIENTES, ENTIDADES DO NEGOCIO
4- SERVICES -> SERVICOS
5- REPOSITORES -> REPOSITORIOS
6- APPLICATION -> APPLICACAO, GERALMENTE FICA A MAIN

OBS1: CADA UMA DAS CATEGORIA DE CLASSES, PODEMOS DIZER QUE E UM PACOTE EM JAVA, PARA QUESTOES DE ORGANIZACAO E BOA PRATICA DE DELEGACAO
OBS2: ENTIDADES REPRESENTAM A LOGICA DO NEGOCIO BASICAMENTE

COMPOSICAO:

E UM TIPO DE ASSOCIAO QUE PERMITE QUE UM OBJETO CONHENA OUTRO
RELACAO TEM-UM OU TEM-VARIOS
VANTAGENS:
- ORGANIZACAO: DIVISAO DA RESPONSABILIDADE PARA CADA CLASSE
- COESAO -> CADA OBJETO E RESPONSAVEL POR UMA UNICA COISA, ELE TEM UMA RESPONSABILIDADE BEM DEFINIDA
- FLEXIBILIDADE -> E MAIS FACIL TRABALHAR COM COISA DIVIDIDAS EM PEQUENAS PARTES DO QUE GRANDES
- REUSO -> O MESMO OBJETO PODE SER APROVEITADO

OBS1: EMBORA O SIMBOLO UML PARA COMPOSICAO (TODO-PARTE) SEJA O DIAMENTE PRETO, NESSE CONTEXTO ESTAMOS CHAMANDO DE COMPOSICAO QUALQUER ASSOCIAO TIPO TEM-UM E TEM-VARIOS
OBS2: O DIAMANTE PRETO CITADO ACIMA INDICA QUE CONTEM UMA RELACAO TODO-VARIOS ONDE POR EXEMPLO CITADO A AULA UMA ORDER E UM TODO E CONTEM VARIAS PARTES QUE E O ORDER ITEM
OBS3: SE NAO TEM UM DIAMENTE NAO E RELACAO TODO PARTE, APENAS UMA ASSOCIACAO
OBS4: AO DEFINIR GET E SET EM LISTAS EM ALGUMA CLASSE, NAO DEVE TER O SET POIS IRA ALTERA AQUELA LISTA POR OUTRA E NAO E DE BOA PRATICA PERMITIR ISSO
OBS5: CONCEITO DE DELEGACAO DEVE SER AMPLAMENTE APLICADO, CADA CLASSE DEVE TER SUAS FUNCOES BEM DEFINIDAS E QUE FAZEM SENTIDO PARA A MESMA
OBS6: O MES DO CALENDAR COMECA COM 0

STRING BUILDER -> E UMA CLASSE QUE OTIMIZA A MONTAGEM DE STRING MUITO GRANDES, AO USAR APPEND CONSEGUIMOS CONCATENAR VARIAS STRINGS, POREM DEVEMOS FICAR ATENTO A COMO DEVE FICAR O TEXTO E COLOCAR O \N SE NECESSARIO
OBS1: PRIVE STATIC E PARA QUE NAO TENHA 1 COPIA PARA CADA APLICACAO, APNEAS 1 COPIA PARA A APLICACAO INTEIRA, COMO O NOME STATIC REFERESE AO UM OBJTO ESTATICO, OU SEJA, SEU VALOR NAO MUDA