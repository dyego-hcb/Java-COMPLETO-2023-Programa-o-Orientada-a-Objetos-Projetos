-- RESUMO SEÇÃO 16 - PROJETO: SISTEMA DE JOGO DE XADREZ - DO CURSO JAVA COMPLETO 2023 PROGRAMAÇÃO ORIENTADA A OBJETOS + PROJETOS --

NESSA SECAO, IREMOS DESENVOLVER UM SISTEMA DE JOGO DE XADREZ, ONDE TEREMOS 2 CAMADAS, A PARTIDA DE XADREZ QUE TEM AS PROPRIEDADES DAS REGRAS DE UM JOGO DE XADREZ E UMA CAMADA CHAMADA TABULEIRO, QUE SERA RESPONSAVEL POR REPRESENTAR AS REGRAS DOS TABULEIRO, COMO ONDE AS PECAS ESTAO, ETC
IREMOS TRATAR AS EXECOES, DE POR EXEMPLO QUANDO O USUARIO SELECIONA UMA POSICAO SEM PECA, TODAS AS EXECOES SERAO TRATADAS E MOSTRA UMA MSG FALANDO SOBRE O ERRO
IREMOS APLICAR TODOS OS CONCEITOS DO CURSO ATE AGORA NESSE PROJETO DE XADREZ, E UM PROJETO SIMPLES SEM INTERFACE, SIMPLES POIS E SEM INTERFACE, POIS ESSE PROJETO TEM UM GRAU DE COMPLEXIDADE A MAIS, DEVIDO A VARIAS REGRAS EXECOES QUE TEMOS QUE TRATAR.

ESSE PROJETO ESTARA NO SEGUINTE REPOSITORIO NO GITHUB: https://github.com/zebodexx/chess-system-java

OBS1: CASO TRABALHE EM UM PC QUE POSSA TER DIVERSOS USUARIOS, ONDE PODE TER N USUARIOS DE GIT CADASTRADOS, USAMOS O GIT CONFIG --LIST E VERIFICAMOS O CAMPO USERNAME E USEREMAIL TA COM O SEU NOME E EMAIL DO GIT HUB, CASO NAO TIVER DEVE FAZER O GIT CONFIG GLOBAL USER.NAME E USER.EMAIL COM OS VALORES DO SEU GIT
OBS2: CASO SEJA USUARIO DE WINDOWS, DEVE-SE VERIFICAR AS CREDENCIAS CASO TENHA ALGUMA CREDENCIAL DO GIT DEVE-SE EXCLUIR ANTES DE FAZER O PROCEDIMENTO ACIMA

ESSE RESUMO CONTERA O PASSO A PASSO QUE REALIZAMOS PARA DESENVOLVER ESSE SISTEMA DE XADREZ, CADA PASSO IRA ABORDAR UM TOPICO QUE VIMOS ATE AGORA.

1- FIRST CLASS: POSITION
- CLASS POSITIO PUBLIC
- OOT TOPICS:
- ENCAPSULATION -> CAMPOS PRIVADO E ADD GET E SET
- CONSTRUCTOS -> CONSTRUTORES COM ARGUMENTO
- TOSTRING(OBJECT/OVERRIDING) -> SOBRESCREVENDO METODOS

2- STARTIN TO IMPLEMENT BOARD AND PIECE
- CLASSES PIECE, BOARD PUBLIC
- OOT TOPICS:
- ASSOCIATIONS -> PIECE IN BOARD, POISTION AND BOARD IN PIECE
- ENCAPSULATION / ACESS MODIFERS -> PROTECTED PORQUE GERA MAIS SEGURANCA, FAZENDO COM QUE APENAS SUBLCASSES E CLASSES NO MESO PACOTE POSSAM ACESSAR
- DATA STRUTCT TOPICS:
- MATRIZ -> MATRIZ DE PECAS, COM TAMANHO DAS LINHAS E COLUNAS DO TABULEIRO

OBS1: NA CLASSE PECA, TEM UM ATRIBUTO PROTECTED POIS ELA NAO DEVE SER VISIVEL NA CAMDADA XADREZ
OBS2: JAVA JOGA VALOR NULL PARA OBJETOS POR PADRAO
OBS3: O GET BOARD E PROTECD POIS DEVE SER ACESSADO APENAS POR CLASSES DO MESMO PACOTE OU SUBCLASSES, A CAMADA XADREZ NAO DEVE VISUALIZAR O METODO GET BOARD
OBS4: PROTECTED E PARA O TABULEIRO SER USADO INTERNAMENTE POR ELE MESMO E SEUS FILHOS, ISSO E IMPORTANTE PARA DEIXAR O PROGRAM MAIS PROTEGIDO E PARA QUE OS PROGRAMADORES NAO COMETAM ERROS

3- CHESS LAYER AND PRINTING THE BOARD
- METHODOS: BOARD.PIECE(ROW, COLUMN) AND BOARD.PIECE(POSITION) -> RETORNA POSICAO DE UMA PELA COLUNA E LINHA E UM OBJTO POSITION
- ENUM CHESS.COLOR -> COR DOS JOGADORES
- CLASS CHESS.CHESSPIECE [PUBLIC] -> CLASSE PECA DE XADRES QUE EXTENDE PECA
- CLAS CHESS.CHESSMATCH (PUBLIC) -> CLASSE DA PARTIDA 
- CLAS CHESSCONSOLE.UI -> CLASSE PARA MOSTRA O TABULEIRO
- OOP TOPICS:
- ENUMERATIONS -> AS CORES DO JOGADOR SAO DO TIPO ENUMERADO
- ENCAPSULATION / ACESS MODIFIERS
- INHERITANCE -> CLASSE CHESS PIECE HERDA ATRIBUTOS DE PECA
- DOWNCASTING -> DOWNCASTING DE CHESS PIECE PARA PIECE, POIS QUEREMOS MOSTRAR APENAS A PECA DE XADREZ, E NAO PECA, POIS ESTAMOS NA CAMADA DE XADREZ, E VISTO QUE UMA PECA DE XADREZ E SUBCLASSE DE PECA, PODEMOS REALIZAR O DOWNCASTING SEM PROBLEMAS
- STATIC MEMBERS -> FUNCAO DE PRINTA PECA
- LAYERS PATTERN -> DESENHO DO BOARD
- DATA STRUCTURES TOPICS:
- MATRIX -> MATRIZES DE PECAS NO BOARD

OBS1: E SEMPRE BOM VER AS MUDANCAS DOS COMMITS PARA VER O QUE MUDOU

4- PLACING PIECES ON THE BOARD
- METHOD: BOARD.PLACEPICE(PIECE, POSITION) -> FUNCAO PARA COLOCAR PECAS 
- CLASSES: ROOK, KING[PUBLIC] -> CLASSES EXTENDS DE CHESSPIECE PARA CADA TIPO DE PECA NO XADREZ
- METHOD: CHESSMATH.INITIALSTEUP -> METODO PARA INICIALIZAR O TABULEIRO COM AS PECAS EM SEUS DEVIDOS LOCAIS
- OOP TOPICS:
- INHERITANCE -> HERDA DE CHESSPIECES
- OVERRIDING -> METODO TO STRING
- POLYMORPHISMO (TOSTRING)

OBS1: COMO DEFINIMOS O ATRIBUTO POSITION COMO PROTECTED, PODEMOS ACESSA-LO E ALTERAR SUA PROPRIEDADE SEM UTILIZAR O SET, POREM APENAS COM SUBCLASSES E CLASSES NO MESMO PACOTE E POSSIVEL ACESSAR ESSE ATRIBUTO

5- BOARD EXCEPTION AND DEFENSIVE PROGRAMMING:
- CLASS BOARDEXCEPTION(PUBLIC) -> CLASSE PARA CRIARMOS NOSSAS EXECOES PERSONALIZADAS RELACIONADAS A CAMADA TABULEIRO
- METHODS: BOARD.POSITIONEXISTI, BOARD.THEREISAPIECE -> METODOS PARA VERIFICAR SE A POSICAO EXISTE E UM METODO PARA VERIFICAR SE ALI TEM UMA PECA
- IMPLEMENT DEFENSIVE PROGRAMMING IN BOARD METHODS -> TRATAMENTO DAS EXECOES COM O TRY CATH, PARA INFORMAR ALGUM POSSIVEL ERRO PARA O USUARIO
- OOP TOPICS:
- EXCEPTIONS -> TRATAMENTO DE ALGUMAS EXECOES NO TABULEIRO
- CONSTRUCTORS (A STRING MUST BE INFORMED TO EXCPTION) -> INFORMAR OS ERROS NAS MSG DE EXEPTION

OBS1: PROGRAMACAO DEFENSIVA E MUITO IMPORTANTE PARA INFORMAR AO USUARIO E AO PROGRANADOR QUAL O ERRO QUE FOI GERADO E EM CERTOS CASOS, A APLICACAO DEVE CONTINUAR RODANDO POR ISSO E NECESSARIO REALIZAR A PROGRAMACAO DEFENSIVA PARA EVITAR QUE A APLICACAO SE QUEBRE

6- CHESSEXCEPTION AND CHESSPOSITION
- CLASS CHESEXCEPTION (PUBLIC) -> CLASSE PARA CRIARMOS NOSSAS EXECOES PERSONALIZADAS RELACIONADAS AO JOGO DE XADREZ
- CLASS CHESSPOSITION (PUBLIC) -> POSICOES DAS PECAS DE XADREZ POIS INFORMA A LETRA QUE A LINHA DPS A COLUNA, ESSA CLASSE REPRESENTA ESSA COORDENADA
- REFRACTOR CHESSNATCH.INITIALSETUP
- OOT TOPICS:
- EXCEPTIONS -> CRIAMOS VARIAS EXECOES RELACIONADAS A CAMADA DE XADREZ
- ENCAPSULATION -> OBJETOS PRIVATE DO CHESSPOSITION
- CONSTRUCTORS -> TRATEMTNO DE EXECAO NOS CONSTRUTORES, RETORNANDO UMA MSG DE ERRO
- OVERRIDING -> METODO TO STRING
- STATIC MEMBERS -> O METODO DE CONVERTER UMA POSSICAO PARA CHESS POSICAO
- LAYERS PATTERN -> DESENHO DO JOGO DE XADREZ

7- LITTLE IMPROVMENT IN BOARD PRINTING
- COLOR IN TERMINAL -> MUDAR A COR DO TERMINAL
- WINDOWS GIT BASH -> TERMINAL BASH JA E COLIRIDO
- MAC GOOGLE OSX TERMINAL COLOR -> COLORIR O TERMINAL DO MAC
- PLACE MORE PICES ON THE BOARD -> COLOCANDO MAIS PECAS NO BOARD, COLOCANDO AS PECAS COLORIDAS
- DISTINGUISH PIECE COLORS IN UI.PRINTPIECE METHOD -> DEFININDO AS COR DAS PECAS A PARTIR DO ENUM

OBS1: UTILIZAR CODIGOS ANSI PARA COLORIR O TERMINAL, E ECONTRADO NO GOOGLE BASTA DAR ANSI_COLOR JAVA

8- MOVING PIECES
- METHODO BOARD.REMOVEPIECE -> METODO PARA REMOVER UMA PECA DO TABULEIRO
- METHOD UI.READCHESSPOSITION -> METODO PARA INTERFACE RECEBER DO USUARIO UMA LEITURA DE MOVIMENTO
- METHODO CHESSMATH.PERFOMCHESSMOVE -> METODO PARA REALIZAR O MOVIMENTO INFORMANDO A POSICAO INICIAL E O DESTINO FINAL, POREM EXIGE ALGUMAS VERIFICACOES COMO AS CITADAS ABAIXO
- METHOD CHESSMATH.MAKEMOVE -> METODO PARA REALIZAR O MOVIMENTO 
- METHOD CHESSMATHC.VALIDESOURCEPOSITION -> METODO PARA VERIFICAR SE A POSICAO DE PARTIDA E VALIDA
- WRITE BASIC LOGIC ON PROGRAM.CS -> LOGICA DE EXECUTAR O MOVIMENTO PELA MAIN
- OOT TOPICS:
- EXCEPTIONS -> TRATAMOS AS POSSIVEIS EXECOES DE MOVIMENTO
- ENCAPSULATION -> TODOS OS ATRIBUTOS FORAM ENCAPSULADO DE ACORDO COM SEU GRAU DE NECESSIDADE DE SEGURANCA

OBS1: QUANDO TEMOS EXECOES DO MESMO OBJETO ACONTECENDO, POR EXEMPLO UMA EXECAO DE CHESS EXCEPTION E A MESMA DA BOAR EXCPETION, DEVEMOS DA UM EXTENDS NA CLASSE CHESS ECPETION PARA ELA SER UMA SUB CLASSE DA BOAR EXCPETION, VISTO QUE JA POSSUEM UMA EXECAO EM COMUM, E CAPTURA AMBAS

9- HANDLING EXCEPTIONS AND CLEARING SCREEN
LIMPAR A TELA E IMPORTANTE, POIS A CADA RODADA DEVE MOSTRAR UMA TELA LIMPA E NAO POLUIDA IGUAL ESTA NO MOVIMENTO
- CHESSEXCEPTION -> TRATAMENTO DE ALGUMAS EXECOES EM RELACAO AO JOGO DE XADREZ
- INPUTMISSMATCHEXCEPTION -> TRATAMENTO DE EXECAO EM REALACAO A ENTRADA DO USUARIO, CASO DIGITE ALGO QUE NAO FACA SENTIDO

10- POSSIBLE MOVES OF A PIECE
CADA TIPO DE PECA SE MOVE DIFERENTE, POR EXEMPLO O PEAO SO VAI DE 1 EM 1 CASA PARA FRENTE SE ESTIVER E PODE IR PARA DIAGONAL PARA COMER UMA PECA ADVERSARIA.
AO SELECIONARMOS UMA PECA, NESSE EXEMPLO, TEREMOS MAPEADO TODOS OS POSSIVEIS MOVIMENTOS DESSA PECA SELECIONADA EM UMA MATRIZ, ONDE OS MOVIMENTOS POSSIVEIS VAO SER MARCADOS COM ALGUMA FLAG NESSA MATRIZ
- METODO IN PIECE:
- POSSIBLESMOVES(ABSTRACT) -> POSSIVEIS MOVIMENTOS DE UMA PECA, ABSTRATO POIS DEVE MUDAR SUA LOGICA PARA CADA TIPO DE PECA
- POSSIBLESMOVES -> POSSIVEL MOVIMENTO PODE MOVER PARA UMA DETERMINADA POSICAO
- ISTHERANYPOSSIBLEMOVE -> VERIRIFICA SE QUALQUER MOVIMENTO E POSSIVEL, SE A PECA NAO ESTA PRESA
- BASIC POSSIBLEMOVE IMPLEMENTATION FOR ROOK AND KING -> IMPLEMENTACAO BASICA DE MOVIMENTOS POSSIVEIS PARA O ROOK E KING
- UPDATE CHESSMATCH.VALIDADESOURCEPOSITION -> MELHORIA NO METHODO DE VALIDAR UMA POSICAO DE ORIGEM
- OOP TOPICS:
- ABSTRACT METHOD/CLASS -> FORAM CRIADAS METODOS DE MOVIMENTACAO ABSTRATOS E COM ISSO, A CLASSE QUE POSSUI METODOS ABSTRATOS, TAMBEM E UMA CLASSE ABSTRATA, POIS HA VARIOS TIPOS DE PECAS E CADA PECA TEM SEU MOVIMENTO, FAZENDO COM QUE NECESSITE DE SUA IMPLEMENTACAO
- EXCEPTIONS -> TRATAMENTO DE EXECAO DOS MOVIMENTOS

OBS1: AO UTILIZAR UM METODO CONCRETO, E FAZER O MESMO UTILIZAR UM METODO ABSTRATO, ELE REALIZA A ACAO DE HOOK, QUE E COMO SE FOSSE UM GANCHO COM A SUBCLASSE
OBS2: TAMPLATE METHOD E BASEADO NO METHOD HOOK

11- IMPLEMENTING POSSIBLE MOVES OF ROOK
- METHOD CHESSPIECE.ISTHEROPPONENTPIECE(POSITION)[PROTECTED] -> VERIFICA SE E A PECA DO OPONENTE OU NAO, PROTECTED POIS APENAS AS CLASSES DO PACOTE XADREZ DEVEM SABER DESSA FUNCAO E SUBCLASSES TAMBEM
- IMPLEMENT ROOK.POSSIBLESMOVES -> IMPLEMENTACAO DA LOGICA DE MOVIMENTACAO 
- METHOD CHESSMATCH.VALIDADETARGETPOSITION -> VERIFICA SE O DESTINO E VALIDO
- OOP TOPICS:
- POLYMORPHISM -> MUDANCA DE COMPORTAMENTO DEVIDO A UM DETERMINDADO OBJETO DE UM DETERMINADO TIPO
- ENCAPSULATION/ACESS MODIFIERS [PROTECTED] -> ATRIBUTOS E MTODOS DEVIDAMENT ENCAPSULADO, METODO PROTECTD PARA QUE APENAS CLASSES DO PACOTES E SUBCLASSES CONSIGAM ACESSAR ESSES METODOS, PARA QUE FIQUE BEM DEFINIDO O QUE CADA CLASSE FAZ E SABE
- EXEPTION -> TRATAMOS AS EXECOES DE MOVIMENTACOES

12- PRINTING POSSIBLE MOVES
- METHODO CLASSMATCH.POSSIBLESMOVES -> RETORNAR A MATRIZ DE BOOLEANO DE POSSIVEIS MOVIMENTOS DE UMA DETERMINADA PECA PARA QUE SEJA POSSIVEL COLORIR OS POSSIVEIS MOVIMENTOS
- METHODO UI.PRINTBOARD[OVERLOAD] -> METODO DE PRINT BOARD SOBRECARREGADO, UMA VERSAO QUE IRA COLORIR OS POSSIVEIS MOVIMENTOS
- REFRACTOR MAIN PROGRAM LOGIC -> ALTERACAO DA LOGICA DO PROGAMA MAIN PARA MOSTRAR OS MOVIMENTOS POSSIVEIS
- OOP TOPICS:
- OVERLOADING -> SOBRECARGA CRIAR OUTRO METODO COM O MESMO NOME POREM COM PARAMETROS DIFERENTES

13- IMPLEMENTING POSSIBLE MOVES OF KING
- METHODO KING.CANMOVE(POSITION)[PRIVATE] -> VERIFICA SE O REI PODE MOVER, SE ELE NAO ESTA TRAVADO
- IMPLEMENT KING.POSSIBLESMOVES -> MATRIZ COM OS POSSIVEIS MOVIEMENTOS DO REI
- OOP TOPICS:
- ENCAPSULATION -> METODOS E ATRIBUTOS DEVIDAMENTE ENCAPSULADOS PARA GERAR UMA MAIOR SEGURANCA
- POLYMORPHISM -> CADA OBJETO DE UM DETERMINADO TIPO, NESSE CASO A PECA, POSSUI UM COMPORTAMENTO DIFERENTE IGUAL A TORRE E O REI, TORRE ANDA PARA N BLOCOS NA HORIZONTAL E VERTICAL, ENQUANTO O REI APENAS 1 PARA TODAS AS DIRECOES

14- SWITCHING PLAYER EACH TURN
- CLASS CHESSMATCH:
- PROPETIES TURN, CURRENTPLAYER [PRIVATE SET] -> ADICIONAR ATRIBUTO TURNO, VEZ DO JOGADOR, AMBOS PRIVADOS PARA SEGURANCA
- METHOD NEXTTURN [PRIVATE] -> CRIA UM METODO PARA PASSAR O TURNO
- UPDATE PERFORMCHESSMOVE -> MELHORA O METODO  PERFORM CHESS MOVE 
- UPDATE VALIDADESOURCEPOSITION -> MELHORIA NO METODO DE VALIDACAO DA POSICAO INICIAL
- METHOD UI.PRINTMATCH -> CRIARCAO DE UMA IMPRESSAO DE PARTIDA
- OOP TOPICS:
- ENCAPSULATION -> ATRIBUTOS DEVIDAMENTE ENCPSULADO PARA GERAR MAIS SEGURANCA
- EXCEPTIONS -> TRATAMENTO DE POSSIVEIS EXECOES 

15- HANDLING CAPTURED PIECES
- METHODO UI.PRINTCAPTUREDPIECES -> CRIA UM METODO PARA PRINTAR AS PECAS CAPTURADAS POR DETERMINADO JOGADOR
- UPTADE UI.PRINTMATCH -> ATUALIZA O METODO DE PRINT MATCH, POIS DEVE-SE MOSTRAR AS PECAS CAPTURAS A CADA TURNO
- UPDATE PROGRAM LOGIC -> ATUALIZA A LOGICA DO PROGRAMA PRINCIPAL
- LISTS IN CHESSMATCH: +PICESONTHEBOAR, +CAPTUREDPIECES -> LISTA DE PECAS NO TABULEIRO E PECAS CAPTURADAS
- UPDATE CONSTRUCTORS -> ATUALIZACAO DE CONSTRUTORES 
- UPDATE PLACE NEW PIECE -> ATUALIZA PLACE NEW PIECE, POIS QUANDO CHEGA NO FINAL DO TABULEIRO COM UM PEAO PODE-SE BUSCAR UMA PECA QUE FOI CAPUTARADA E COLOCA-LA EM CAMPO
- UPDATE MAKEMOVE -> ATAULIZAR METODO DE FAZER MOVIMENTO
- OOP TOPICS:
- ENCAPSULATION -> NOVOS ATRIBUTOS ADICIONADOS E ENCPSULADOS PARA GERAR MAIOR SEGURANCA
- CONSTRUCTORS
- DATA STRUCTERS TOPICS:
- LIST -> USAMOS LISTA PARA GUARDAR AS PECAS QUE FORAM CAPTURADAS

OBS1: PODEMS FAZER UMA BUSCA USANDO EXPRESSO LAMBDA, ESSA BUSCA E BEM SIMPLES DE SE FAZER EM LISTA, BASTA USAR O STREAM.FILTER.COLLECT
OBS2: PARA IMPRIMIR LISTAS DE FORMA MAIS FACIL, BASTA SUAR O ARRAY.TOSTRING, ISSO E PADRAO PARA LISTAS EM JAVA.
OBS3: TANTO FAZ INICAILIZAR OBJTOS NO CONSTRUTOR OU NO MOMENTO EM QUE INSTNCIA A VARIAVEL NA CLASSE

16- CHECK LOGIC
- CHECK MEANS YOUR KING IS UNDER THREAT BY AT LEAST ONE OPPONENT PIECE -> REI SOB AMEACA
- YOU CAN'T PUT YOURSELF IN CHECK -> VOCE NAO PODE SE COLOCAR EM CHECK, DEVE-SE VERIFICAR ESSE MOVIEMENTO
- PROPETY CHESSPIECE.CHESSPOSITION[GET] -> ADICIONA UMA NOVA PROPRIEDADA NA CLASSE CHESSPIE PARA PEGAR A POSICAO DA PECA DE XADREZ
- CLASS CHESSMATH: -> ALTERACOES NA CLASSE CHESSMATCH
- METHOD UNDOMOVE -> DESFAZER MOVIMENTO CASO ESSE MOVIMENTO FACA O JOGADOR ENTRAR EM CHECK
- PROPETY CHECK[PRIVATE SET] -> ADICIONA APROPRIEDADE CHECK NA PARTIDA, PARA QUE SEJA POSSIVEL SABER SE O REI DE UM DETERMINADO JOGADOR ESTA EM CHECK OU NAO
- METHOD OPPONENT[PRIVATE] -> APENAS PARA MOSTRAR QUAO O OPNENTE
- METHOD KING(COLOR)[PRIVATE] -> METODO PARA VERIFICAR SE O REI TA NO TABULEIRO E PEGAR SUA POSICAO
- METHOD TESTCHECK -> VERIFICA SE ESTA EM CHECK
- UPDATE PERFORMCHESSMOVE -> ATUALIZA O METODO DE MOVIMENTO 
- UPDATE UI.PRINTMATCH -> ATUALIZA O METODO DE PRINTAR A PARTIDA

OBS1: METODOS BOOLEANOS CRIANOS EM CLASES POR PADRAO RECEBEM VALOR FALSE
OBS2: INSTANCEOF VERIRICA SE E DA MESMA INSTANCIA

17- CHECKMATE LOGIC
- CLASS CHESSMATCH: -> ALTERACOES NA CLASSE CHESSMATHC
- PROPETY CHECKMATE [PRIVATE SET] -> CRIA UM ATRIBUTO CHECKMATE NA CLASSE MATCH PARA VERIFICAR SE A JOGADA E UM CHECKMATE OU NAO, SE FOR ENCERRA O JOGO
- METHOD TESTCHECKMATE[PRIVATE] -> CRIA METODO PARA VERIFICAR SE A JOGADA E CHECKMATE OU NAO
- UPDATE PERFORMCHESSMOVE -> ATUALIZAR A LOGICA DE MOVIMENTO 
- UPDATE UI.PRINTMATCH -> ATUALIZAR A LOGICA DE PRINT DE PARTIDA 
- UPDATE PROGRAM LOGIC -> ATUALIZAR A LOGICA DO PROGRAM PRINCIPAL

18- PIECE MOVE COUNT
- CLASS CHESSPIECE: -> EDICOES NA CLASE CHESSPIECE
- PROPETY MOVECONT [PRIVATE SET] -> ADICICAO DE UM NOVO ATRIBUTO 
- METHOD INCREASEMOVECONT [INTERNAL] ->  ADICAO DO METODO PARA INCREMENTAR O NUMERO DE MOVIMENTOS`
- METHOD DECREASEMOVECONT [INTERNAL] -> ADICAO DO METODO PARA DECREMENTA O NUMERO DE MOVIMENTOS
- CLASS CHESSMATCH: -> ALTERACOES NA CLASSE CHESSMATHC
- UPDATE MAKEMOVE -> EDITAR MAKE MOVE
- UPDATE UNDOMOVE -> EDITAR UNDO MOVE
- OOP TOPICS: 
- ENCAPSULATION -> TODOS OS ATRIBUTOS E METODOS CRIADOS FORAM ENCAPSULADOS DE ACORDO COM SUAS NECESSIDADES

OBS1: INTEIRO INSTANCIADO EM CLASSE POR PADRAO COMECA EM 0

19- PAWN
- CLASS PAWN -> IREMOS CRIAR A CLASSE PEAO
- UPDATE CHESSMATCH.INITUALSETUP -> ALTERACAO NO DESENHO INICIAL DO TABULEIRO
- OOP TOPICS:
- ENCAPSULATION -> TODOS OS METODOS DA CLASSE CRIADA FORAM DEVIDAMENTE ENCPSULADOS PRA GERAR MAIS SEGURANCA
- INHERITANCE -> A CLASSE CRIARDA TEVE UMA HERANCA DA CLASSE CHESSPIECE
- POLYMORPHISM -> COMPORTAMENTOS DIFERENTE PARA O MOVIMENTO

20- BISHOP
- CLASS BISHOP -> CRIA UMA NOVA CLASSE BISPO PARA RERPESENTAR UMA PECAS DE XADRES
- UPDATE CHESSMATH.INITIALSETUP -> ATUALZIA INICIALIZACAO, COLOCANDO SO BISPOS
- OOP TOPICS:
- ENCAPSULATION -> TODOS OS ATRIBUTOS E METODOS FORAM DEVIDAMENTE ENCPASULADO VISANDO SEGURANCA
- INHERITANCE -> HERANCA DA CLASSE PECA DE XADREZ PARA A CLASSE BISPO
- POLYMORPHISM -> A CLASSE BISPO SE MOVIEMENTA DIFERENTE, MESMO SENDO UMA PECA DE XADREZ

21- KNIGHT
- CLASS KINGHT -> CLASSE DO CAVALO CRIADA
- UPDATE CHESSMATCH.INNITIAL STEUP -> ADICIONANDO O CAVALO NO SETUP INICIAL
- OOP TOPICS:
- ENCAPSULATION -> ATRIBUTOS E METODOS DA CLASSE CAVALO DEVIDAMENTE ENCAPSULADO PARA GERAR MAIOR SEGURANCA
- INHERITANCE -> HERDA DE CHESS PIECE
- POLYMORPHISMO -> MOVIMENTO MUDA E TO STRING TB

22- QUEEN
- CLASS QUEEN -> CRIA A CLASSE RAINHA
- UPDATE CHESSMATCH.INITIALSETUP -> COLOCA A RAINHA NO TABULEIRO
- OOP TOPICS:
- ENCAPSULATION -> TODOS OS ATRIBUTOS EM TODOS DA CLASSE RAINHA, FORAM DEVIDAMENTE ENCPSULADO PARA FINS DE MAIOR SEGURANCA
- INHERITANCE -> HERDA DA CLASSE CHESSPIECE
- POLYMORPHISM -> MOVIMENTO DIFERENTE

OBS1: CONSERTAMOS BUG DO PEAO PROJETO

23- SPECIAL MOVE - CASTILING
- UPDATE KING -> ALTERACOES NA CLASSE KING, PARA ADICIONAR O MOVIMENTO DE CASLING, QUE E A TROCA COM A TORRE, CASO HAJA ESPACO ENTRE OS MESMO E AMBOS NAO TENHAM MOVIMENTADO
- UPDATE CHESSMATCH.MAKEMOVE -> EDITAR O METODO DE FAZER MOVIMENTO
- UPDATE CHESSMATCH.UNDOMOVE -> EDITAR O METODO DE DESFAZER MOVIMENTO

24- SEPECIAL MOVE - EN PASSANT
- REGISTER A PAWN WICH CAN BE CAPTURED BY EN PASSANT ON NEXTTURN
- PROPETY CHESSMATCH.ENPASSANTVULNERABLE -> VERIFICA SE ESTA NA POSICAO QUE ESTA VUNERAVEL CONDICAO DO MOVIMENTO ESPACIAL PASSANT, SE ESTIVER, ESSE MOVIMENTO FAZ COM QUE AO JOGADOR QUE INICIAR O PEAO EM 2 CASSAS A FRENTE NO PRIMEIRO MOVIMENTO DO MESMO, SE TIVER UM PEAO ADVERSARIO NA CASA AO LADO, ELE PODE MOVER NA DIAGONAL E COMER O PEAO QUEE STAR AO LAOD
- UPDATE CHESSMATCH.PERFORMCHESSMOVE -> ATUALIZA O METODO DE MOVIMENTO DA PARTIDA DE XADREZ
- UPDTATE PAW POSSIBLE MOVES -> ATUALIZA O METODO DE POSSIVEIS MOVIMENTOS DO PEAO, POIS O MOVIMENTO DE EN PASSANT SERA POSSIVEL E SEU MOVIMENTO E DIFERNTE
- UPDATE CHESSMATCH.MAKEMOVE -> ATUALIZAR O METODO DE MOVIMENTO DA PARTIDA VERIFICANDO SE ENTROU EM EN PASSANT
- UPDATE CHESSMATCH.UNDOMOVE -> ATUALIZAR O METODO DE DESFAZER O MOVIMENTO
- UPDATE CHESSMATCH.INITIALSETUP -> ATUALIZAR O METODO DE INICIALIZACAO, POIS DEVEMOS PASSAR POR PARMETRO O BOARD DO JOGO PARA OS PERFOMCHESSMOVE

25- SPECIAL MOVE - PROMOTOION
- PROPETY CHESSMATCH.PROMOTED -> PARA POSTERIORMENTE VERIRICAR SE UM PEAO FOI PROMOVIDO, UM PEAO E PROMOVIDO QUANDO ELE CHEGA DO OUTRO LADO DO TABULEIRO, PODENDO EM TAO SR PROMOVIDO PARA QUAISQUER PECA ALEM DE PEAO
- MATHOD CHESSMATCH.REPLACEPROMOTEDPEIECE -> METODO PARA TROCA O PEAO EM UMA PECA DE MAIOR ESCALAO, CASO O MESMO CHEGUE AO FINAL DO TABULEIRO
- UPDTATE PROGRAM LOGIC -> ATUALIZAR A LOGICA DO PROGRAMA PRINCIPAL