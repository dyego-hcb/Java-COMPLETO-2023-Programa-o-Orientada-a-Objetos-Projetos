-- RESUMO SEÇÃO 17 - TRABALHANDO COM ARQUIVOS - DO CURSO JAVA COMPLETO 2023 PROGRAMAÇÃO ORIENTADA A OBJETOS + PROJETOS --

PARA LER UM ARQUIVO TEXTO, USAMOS AS CLASSES FILE E SCANNER.

CLASSES:
- FILE -> REPRESENTACAO ABSTRATA DE UM ARQUIVO E SEU CAMINHO
- SCANNER -> LEITOR DE TEXTO
- IOEXCEPTION(EXCPTION) -> EXECAO PARA ENTRADAS E SAIDAS QUANDO MECHEMOS COM ARQUIVOS, ELA HERDA DE EXCPTION E E OBRIGADA A SER TRATADA

PARA INSTANCIARMOS UM AQRUIVO, DEVEMOS SEGUIR A SEGUINTE SINTAXE:

FILE nome_var_File = new File("diretorio_do_arquivo");

OBS1: TEMOS VARIOS OPERACOES A PARTIR DE UM TIPO FILE, COMO CAN EXECUTE  PARA VERIFICAR SE EXECUTAR O ARQUIVO, CAN READ PARA VERIRIFAR SE TEM PERMICAO, ENTRE OUTRAS

PARA LER UM ARQUIVO COM SCNNER DEVEMOS FAZER A SEGUINTE SINTAXE:
sc = new Scanner(nome_var_File);
sc.hashNextLine() -> VERIRICA SE EXSITE LINHA NO ARQUIVO
sc.nextLine(); LE A LINHA DO ARQUIVO

OBS1: DEVE-SE SEMPRE FAZER O TRATAMENTO DA EXECAO DENTRO DE UM BLOCO TRY-CATCH DA EXECAO DE IOEXCEPTION POIS A MESMA EXTENDE A CLASSE EXCPTION ENTAO DEVE-SE SER TRATADA PELO PROGRAMADOR
OBS2: DEVE-SE FECHAR O SCANNER NO BLOCO FINALLY SE NAO ELE CONTINUA ABERTO QUANDO CAPTURAR UMA EXECAO, ISSO E UMA BOA PRATICA DE PROGRAMACAO
OBS3: PARA FECHAR O CANNER NO BLOCO FINALLY DEVE-SE TESTAR PRIMEIRO SE ELE NAO E NULO,SE FOR FECHA O SCANNER.

CLASSES:
- FILEREADER(STREAM(SEQUENCIA) DE LEITURA DE CARACTPERES A PARTIR DE ARQUIVOS)
- BUFFEREDREADER (MASI RAPIDO) -> INSTANCIADO A PARITR DO FILEREADER E IMPLEMENTA OTMIIZACOES USANDO BUFFER DE MEMORIA 

PARA INSTANCIARMOS UM OBJETO FILE READER E BASICAMENTE COMO FIZEMOS COM O SCANENR, DEVEMOS PASSAR O CAMINHO DO ARQUIVO
PARA INSTANCIARMOS UM BUFFEREDREADER DEVERMOS PRIMEIRAMENTE INSTANCIAR UM FILE READER, POIS O BUFFEREDREADER E INSTANCIADO A PARTIR DE UMA INSTANCIA DE UM FILE READER, POIS A PARTIR DA STREAM BASICA INSTANCIAMOS UMA STREAM QUE POSSUI O ESQUEMA DE BUFFERS

PARA LER UMA LINHA UTILIZANDO O BUFFEREDREADER, UTILIZAMOS A FUNCAO READLINE(), ONDE UMA VARIAVEL STRING QUE IRA PEGAR O QUE FOR RETORNADO DA FUNCAO READLINE, E VERIFICAMOS SE ESSA STRING E DIFERENTE DE NULA, SE FOR E PORQUE O ARQUIVO ACABOU

PARA FECHARMOS O BUFFEREDREADER E O FILEREADER, DEVEMOS VERIFICAR SE AMBOS SAO DIFERENTE DE NULOS E CASO FOR VERDADEIRO FECHA-LOS, POREM DEVEMOS RELIZAR UM TRATAMENTO DE EXECAO TAMBEM DE IOEXCPTION, POIS PODE CAPTURAR ALGUMA EXECAO EM E RELACAO A ENTRADA E SAIDA

OBS1: DEVEMOS SEMPRE DECLARAR AS STREAM ANTES DO TRY, ISSO NO MODO MANUAL

BLOCLO TRY-WITH-RESOURSES -> E UM BLOCO TRY QUE DECLARA UM OU MAIS RECURSOS, E GARANTE QUE ESSES RECURSOS SERAO FECHADOS AO FINAL DO BLOCO

OBS1: UTILIZAR O BLOCO TRY-WITH-RESOURSE PODEMOS INSTANCIAR NO CONSTRUTOR DO TRY AS NOSSAS STREAMS E PODEMOS ISNTANCIAR EM BUFFEREDREADER DIRETAMENTE, SEM NECESSIDADE DE INSTANCIAR UM FILEREADER PRIMEIRO

CLASSES:
- FILEWRITER(STREAM(SEQUENCIA) DE ESCRITA DE CARACTERES EM ARQUIVOS)
* CIRA/RECRIA O ARQUIVO: NEW FILEWRITER(PATH);
* ACRESCENTA O ARQUIVO EXISTENTE: NEW FILEWRITER(PATH, TRUE)
- BUFEREDWRITER(MAIS RAPIDO) POR TRATAR POR BUFFER

OBS1: MESMA COISA DO BUFFEREDREADER E FILEREADER POREM PARA ESCRITA NO ARQUIVO
OBS2: UTILIZAR SEMPRE O TRY-WITH-RESOURSE QUANDO USAR BF,BW, FW E FOR
OBS3: PARA ESRVERA UTILIZA-SE A VARAIVERL DE BW.WRITE();
OBS4: NO .WRITE() NAO COLOCA QUEBRA DE LINHA, DEVE-SE UTILIZAR O BW.NEWLINE()
OBS5: EXECAO SEMPRE IOEXCEPTION

MANIPULAR PASTAS COM A CLASSE FILE:

OBS1: UMA VARIAVEL DO TIPO FILE PODE SER TANTO UM ARQUIVO QUANDO UM CAMINHO(PATH)
OBS2: PARA PEGAR TODAS AS PASTAS A PARTIR DE UM CAMINHO COM A CLASSE FILE, UTILIZAMOS A FUNCAO LISTFILES() COM UMA FUNCAOR DE ARGUMENTO, QUE SERA A FILE::ISDRECTORY RETORNA UM VETOR DE PASTAS DAQUELE diretorio_do_arquivo
OBS3: PARA PEGAR TODOS OS ARQUIVOS A PARTIR DE UM CAMINHO FAZEMOS DO MEMO JEITO QUE A PASTA, SO QUE EM PASSAMOS A FUNCAO FILE::ISFILE POR PARAMETRO NA FUNCAO LISTFILES
OBS4: PARA CRIARMOS UMA PASTA, EM JAVA UTILIZAMOS SEGUINTE INSTANCIAAO NEW FILE(PATH + "\\NOME_PASTA").MKDIR() CRIA UMA SUBPASTA NAQUELE diretorio_do_arquivo

INFORMACOES DE CAMINHO DO ARQUIVO:

OBS1: PARA ACESSAR O NOME DO ARQUIVO, UTILIZAMOS O METODO NA VARIAVEL TIPO FILE, TEMOS A GETNAME QUE RETORNA O NOME DE ARQUIVO
OBS2: PARA ACESAR O CAMINHO, E BASICAMENTE COMO A DO NOME DO ARQUIVO, BASTA CHAMAR A FUNCAO GETPARENT.
OBS3: PARA ACESAR O CAMINHO COMPLETO DO ARQUIVO BASTA CHAMAR A FUNCAO GETPATH.
OBS4: CLASE FILE POSSUI VARIOS RECURSOS, OS CITADOS ACIMAS FORAM OS PRINCIPAIS.

